buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenLocal()
		maven{url 'http://maven.aliyun.com/nexus/content/groups/public/'}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}
ext{
	druidVersion='1.0.31'
	fastJsonVersion='1.2.33'
	commonsVersion='3.5'
	commonBeanUtilsVersion='1.9.3'
	mpCommonVersion='0.2.1'
	qiniuVersion='7.2.6'
	redisBootVersion='1.4.7.RELEASE'
	xsreamVersion='1.4.10'
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
group = 'com.mp.fx'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	maven{url 'http://maven.aliyun.com/nexus/content/groups/public/'}
	maven{url 'http://maven.mipaish.com/repository/maven-releases'}
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-jdbc'){
		// 此处要去掉默认连接池  否则会报错  或者 spring.datasource的会多初始化连接池
		exclude  group:'org.apache.tomcat',module:'tomcat-jdbc'
	}
	// 私有仓库
	compile "com.mp.common:common:${mpCommonVersion}"
	compile "com.thoughtworks.xstream:xstream:${xsreamVersion}"
}

dependencies {
	compileOnly('org.projectlombok:lombok')
	runtime("org.springframework.boot:spring-boot-devtools")
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
bootRun {
	addResources = true
}
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

